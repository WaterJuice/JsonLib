////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  JsonLib
//
//  This module encodes and decodes base 64. This uses modified base 64 that does not require padding characters.
//  It will not emit padding characters, but it will safely ignore any on input.
//
//  This is free and unencumbered software released into the public domain - November 2019 waterjuice.org
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#pragma once

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  IMPORTS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

#include <stdint.h>
#include <string.h>
#include "JlStatus.h"

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  PUBLIC FUNCTIONS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  JlBase64Encode
//
//  Encodes binary into modified Base 64 (does not include padding character). Uses standard Base64 for MIME character
//  set. This function allocates *pBase64String as a zero terminated string. Use JlFree to deallocate the string.
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
JL_STATUS
    JlBase64Encode
    (
        void const*         Data,
        size_t              DataSize,
        char**              pBase64String
    );

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//  JlBase64Decode
//
//  Decodes base64 into binary. This takes a string and will stop when it hits the end of string OR a padding
//  character. Any characters following the padding character will be ignored. Non base64 characters in the input
//  will return an error.
//  Use JlFree to deallocate *pData
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
JL_STATUS
    JlBase64Decode
    (
        char const*         Base64String,
        void**              pData,
        size_t*             pDataSize
    );
